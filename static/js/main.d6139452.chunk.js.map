{"version":3,"sources":["Navbar.js","BlogList.js","useFetch.js","Home.js","Create.js","BlogDetails.js","NotFound.js","App.js","index.js"],"names":["Navbar","className","to","style","color","backgroundColor","borderRadius","BlogList","blogs","map","blog","id","title","author","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","Home","Create","setTitle","body","setBody","setAuthor","history","useHistory","onSubmit","e","preventDefault","method","headers","JSON","stringify","push","type","required","value","onChange","target","BlogDetails","useParams","onClick","NotFound","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6139452.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <h1>The Dottore Blog</h1>\r\n      <div className=\"links\">\r\n        <Link to=\"/\">Home</Link>\r\n        <Link to=\"/create\" style={{ \r\n          color: 'white', \r\n          backgroundColor: '#f1356d',\r\n          borderRadius: '8px' \r\n        }}>New Blog</Link>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n \r\nexport default Navbar;","import { Link } from 'react-router-dom';\r\n\r\nconst BlogList = ({ blogs }) => {\r\n  return (\r\n    <div className=\"blog-list\">\r\n      {blogs.map(blog => (\r\n        <div className=\"blog-preview\" key={blog.id} >\r\n          <Link to={`/blogs/${blog.id}`}>\r\n            <h2>{ blog.title }</h2>\r\n            <p>Written by { blog.author }</p>\r\n          </Link>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default BlogList;","import { useState, useEffect } from 'react';\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIsPending] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const abortCont = new AbortController();\r\n\r\n    setTimeout(() => {\r\n      fetch(url, { signal: abortCont.signal })\r\n      .then(res => {\r\n        if (!res.ok) { // error coming back from server\r\n          throw Error('could not fetch the data for that resource');\r\n        } \r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        setIsPending(false);\r\n        setData(data);\r\n        setError(null);\r\n      })\r\n      .catch(err => {\r\n        if (err.name === 'AbortError') {\r\n          console.log('fetch aborted')\r\n        } else {\r\n          // auto catches network / connection error\r\n          setIsPending(false);\r\n          setError(err.message);\r\n        }\r\n      })\r\n    }, 1000);\r\n\r\n    // abort the fetch\r\n    return () => abortCont.abort();\r\n  }, [url])\r\n\r\n  return { data, isPending, error };\r\n}\r\n \r\nexport default useFetch;","import BlogList from \"./BlogList\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst Home = () => {\r\n  const { error, isPending, data: blogs } = useFetch('http://localhost:8000/blogs')\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      { error && <div>{ error }</div> }\r\n      { isPending && <div>Loading...</div> }\r\n      { blogs && <BlogList blogs={blogs} /> }\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Home;","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Create = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [body, setBody] = useState('');\r\n  const [author, setAuthor] = useState(\"mario\");\r\n  const [isPending, setIsPending] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const blog = { title, body, author };\r\n\r\n    setIsPending(true);\r\n\r\n    fetch('http://localhost:8000/blogs', {\r\n      method: 'POST',\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(blog) \r\n    }).then(() => {\r\n      console.log('new blog added');\r\n      setIsPending(false);\r\n      // history.go(-1);\r\n      history.push('/');\r\n    })\r\n\r\n    \r\n  }\r\n\r\n  return (\r\n    <div className=\"create\">\r\n      <h2>Add a New Blog</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Blog title:</label>\r\n        <input \r\n          type=\"text\"\r\n          required\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n      <label>Blog body:</label>\r\n      <textarea\r\n        required\r\n        value={body}\r\n        onChange={(e) => setBody(e.target.value)}\r\n      ></textarea>\r\n      <label>Blog author:</label>\r\n      <select\r\n        value={author}\r\n        onChange={(e) => setAuthor(e.target.value)}\r\n      >\r\n        <option value=\"mario\">mario</option>\r\n        <option value=\"yoshi\">yoshi</option>\r\n      </select>\r\n      { !isPending && <button>Add blog</button> }\r\n      { isPending && <button>Adding blog...</button> }\r\n    </form>\r\n    </div>\r\n  );\r\n} \r\n\r\nexport default Create;","import { useHistory, useParams } from \"react-router-dom\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst BlogDetails = () => {\r\n  const { id } = useParams();\r\n  const { data: blog, error, isPending } = useFetch('http://localhost:8000/blogs/' + id);\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    fetch('http://localhost:8000/blogs/' + blog.id, {\r\n      method: 'DELETE'\r\n    }).then(() => {\r\n      history.push('/');\r\n    }) \r\n  }\r\n\r\n  return (\r\n    <div className=\"blog-details\">\r\n      { isPending && <div>Loading...</div> }\r\n      { error && <div>{ error }</div> }\r\n      { blog && (\r\n        <article>\r\n          <h2>{ blog.title }</h2>\r\n          <p>Written by { blog.author }</p>\r\n          <div>{ blog.body }</div>\r\n          <button onClick={handleClick}>delete</button>\r\n        </article>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default BlogDetails;","import { Link } from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n    return (  \r\n        <div className=\"not-found\">\r\n            <h2>Sorry</h2>\r\n            <p>That page cannot be found</p>\r\n            <Link to=\"/\">Back to the homepage...</Link>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default NotFound;","import Navbar from './Navbar';\nimport Home from './Home';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Create from './Create';\nimport BlogDetails from './BlogDetails';\nimport NotFound from './NotFound';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/create\">\n              <Create />\n            </Route>\n            <Route path=\"/blogs/:id\">\n              <BlogDetails />\n            </Route>\n            <Route path=\"*\">\n              <NotFound />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}